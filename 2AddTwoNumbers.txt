/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if(l1 == null){
            return l2;
        }else if(l2 == null){
            return l1;
        }
        int sum = 0;
        int carry = 0;
        ListNode lresult = new ListNode(0);
        ListNode d = lresult;
        /*while(l1 != null || l2 != null || carry != 0){
            if(l2 == null && l1 != null){
                l1.val += carry;
                d.next = l1;
                break;
            }
            if(l1 == null && l2 != null){
                l2.val += carry;
                d.next = l2;
                break;
            }
            if(l1 == null && l2 == null){
                d.next = new ListNode(carry);
                break;
            }
            d.next = new ListNode(0);
            d = d.next;
            sum = l1.val+l2.val+carry;
            d.val = sum % 10;
            carry = sum / 10;
            l1 = l1.next;
            l2 = l2.next;
            
         }*/
         while(l1 != null || l2 != null || carry != 0){
             ListNode cur = new ListNode(0);
             sum = ((l1 == null)?0:l1.val)+((l2 == null)?0:l2.val)+carry;
             carry = sum/10;
             cur.val = sum%10;
             d.next = cur;
             d = d.next;
             l1 = (l1 == null)?l1:l1.next;
             l2 = (l2 == null)?l2:l2.next;
         }
         
        return lresult.next;
    }
}