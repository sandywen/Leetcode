/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isPalindrome(ListNode head) {
       if(head == null){
           return true;
       }
       ListNode s = head;
       ListNode f = head;
       while(f != null && f.next != null){
           s = s.next;
           f = f.next.next;
       }
       //the length of list is even
       if(f != null){
           s = s.next;
       }
       ListNode rh = reverse(s);
       while(head != null && rh != null){
           if(head.val != rh.val){
               return false;
           }else{
               head = head.next;
               rh = rh.next;
           }
       }
       return true;
    }
    
    public ListNode reverse(ListNode head){
        if(head == null){
            return null;
        }
        ListNode pre = null;
        ListNode cur = head;
        while(cur != null){
            ListNode temp = cur.next;
            cur.next = pre;
            pre = cur;
            cur = temp;
        }
        return pre;
    }
}